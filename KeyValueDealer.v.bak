module KeyValueDealer
(
    input wire	CLK,
    input wire	nRST,
    input wire	KeyPressFlag,
    input wire[3:0] InputData,
    output reg[31:0] OutputData,
	 output reg[3:0] CntNum
);

reg ShiftFlag;
reg CurFlag;

initial
begin
    OutputData=32'd0;
	 CntNum=4'd0;
	 ShiftFlag=1'b0;
	 CurFlag=1'b0;
end

always@(posedge CLK)
begin
    if(!nRST)
	 begin
	     OutputData<=32'd0;
		  CntNum<=4'd0;
		  CurFlag<=ShiftFlag;
	 end
	 else
	 begin
	     if(CurFlag!=ShiftFlag)
		  begin
		      CurFlag<=ShiftFlag;
		      OutputData<=OutputData<<4;
				OutputData[3:0]<=InputData;
				if(CntNum<7)    CntNum<=CntNum+1'b1;				
				else            CntNum<=CntNum;
		  end
		  else
		  begin
		      OutputData<=OutputData;
		      CntNum<=CntNum;
		  end
	 end
end

always@(posedge KeyPressFlag)
begin
    ShiftFlag<=~ShiftFlag;
end

endmodule 